--- ../verrou_repo/valgrind-3.22.0+verrou-dev/verrou/generateBackendInterOperator.py	2024-02-06 11:56:20.772191313 +0100
+++ full_modified_files/generateBackendInterOperator.py	2024-02-06 11:44:04.542176796 +0100
@@ -122,32 +122,67 @@
 
     template1Args="vr_interp_operator_template_cast.h"
     listOfOp1Args=["cast"]
-    generateNargs(fileOut,template1Args, ["verrou","mcaquad","checkdenorm"], listOfOp1Args, 1)
+    generateNargs(fileOut,template1Args, [
+        "verrou",
+        "mcaquad",
+        "checkdenorm",
+        # GENERATED ADDITIONAL BACKEND 1 #
+        # END OF GENERATED ADDITIONAL BACKEND 1 #
+        ], listOfOp1Args, 1)
     generateNargs(fileOut,template1Args, ["verrou"], listOfOp1Args, 1, post="check_float_max")
     generateNargs(fileOut,template1Args, ["verrou"], listOfOp1Args, 1, roundingTab=roundingTab)
 
     template1Args="vr_interp_operator_template_1args.h"
     listOfOp1Args=["sqrt"]
     fileOut.write("#ifdef USE_VERROU_SQRT\n")
-    generateNargs(fileOut,template1Args, ["verrou","checkdenorm"], listOfOp1Args, 1)
+    generateNargs(fileOut,template1Args, [
+        "verrou",
+        "checkdenorm",
+        # GENERATED ADDITIONAL BACKEND 2 #
+        # END OF GENERATED ADDITIONAL BACKEND 2 #
+        ], listOfOp1Args, 1)
     generateNargs(fileOut,template1Args, ["verrou"], listOfOp1Args, 1, post="check_float_max")
     generateNargs(fileOut,template1Args, ["verrou"], listOfOp1Args, 1, roundingTab=roundingTab)
     fileOut.write("#endif\n")
 
     template2Args="vr_interp_operator_template_2args.h"
     listOfOp2Args=["add","sub","mul","div"]
-    generateNargs(fileOut,template2Args, ["verrou","mcaquad","checkdenorm"], listOfOp2Args, 2)
+    generateNargs(fileOut,template2Args, [
+        "verrou",
+        "mcaquad",
+        "checkdenorm",
+        # GENERATED ADDITIONAL BACKEND 3 #
+        # END OF GENERATED ADDITIONAL BACKEND 3 #
+        ], listOfOp2Args, 2)
     generateNargs(fileOut,template2Args, ["verrou"], listOfOp2Args, 2, post="check_float_max")
     generateNargs(fileOut,template2Args, ["verrou"], listOfOp2Args, 2, roundingTab=roundingTab)
 
     listOfOp2Args=["add","sub"]
-    generateNargs(fileOut,template2Args, ["verrou","mcaquad","checkdenorm"], listOfOp2Args, 2, post="checkcancellation")
+    generateNargs(fileOut,template2Args, [
+        "verrou",
+        "mcaquad",
+        "checkdenorm",
+        # GENERATED ADDITIONAL BACKEND 4 #
+        # END OF GENERATED ADDITIONAL BACKEND 4 #
+        ], listOfOp2Args, 2, post="checkcancellation")
 
     template3Args="vr_interp_operator_template_3args.h"
     listOfOp3Args=["madd","msub"]
-    generateNargs(fileOut,template3Args, ["verrou","mcaquad","checkdenorm"], listOfOp3Args, 3)
-
-    generateNargs(fileOut,template3Args, ["verrou","mcaquad","checkdenorm"], listOfOp3Args, 3, post="checkcancellation")
+    generateNargs(fileOut,template3Args, [
+        "verrou",
+        "mcaquad",
+        "checkdenorm",
+        # GENERATED ADDITIONAL BACKEND 5 #
+        # END OF GENERATED ADDITIONAL BACKEND 5 #
+        ], listOfOp3Args, 3)
+
+    generateNargs(fileOut,template3Args, [
+        "verrou",
+        "mcaquad",
+        "checkdenorm",
+        # GENERATED ADDITIONAL BACKEND 6 #
+        # END OF GENERATED ADDITIONAL BACKEND 6 #
+        ], listOfOp3Args, 3, post="checkcancellation")
     generateNargs(fileOut,template3Args, ["verrou"], listOfOp3Args, 3, post="check_float_max")
     generateNargs(fileOut,template3Args, ["verrou"], listOfOp3Args, 3, roundingTab=roundingTab)
     fileOut.close()
